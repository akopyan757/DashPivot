name: Build and Deploy Client

on:
  push:
    tags:
      - 'client-v*.*.*'

env:
  JAVA_VERSION: "17"

jobs:
  build-android:
    if: startsWith(github.ref, 'refs/tags/client')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Android APK
        run: ./gradlew :composeApp:assembleRelease

      - name: Upload Android APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: composeApp/build/outputs/apk/release/*.apk

  build-ios:
    if: startsWith(github.ref, 'refs/tags/client')
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Xcode
        run: sudo xcode-select --switch /Applications/Xcode_15.4.app

      - name: Build iOS .app File
        working-directory: iosApp
        timeout-minutes: 20
        run: |
          xcodebuild -scheme iosApp -sdk iphonesimulator -configuration Release \
            -derivedDataPath build

      - name: Archive .app file
        run: |
          mkdir -p output
          cp -r iosApp/build/Build/Products/Release-iphonesimulator/iosApp.app output/

      - name: Upload iOS Build
        uses: actions/upload-artifact@v3
        with:
          name: ios-app
          path: output/iosApp.app

  build-desktop-macos:
    if: startsWith(github.ref, 'refs/tags/client')
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Desktop Application
        run: ./gradlew :composeApp:package

      - name: Upload Desktop Build
        uses: actions/upload-artifact@v3
        with:
          name: desktop-build
          path: composeApp/build/compose/binaries/main/dmg/*.dmg