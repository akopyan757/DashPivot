name: Build and Deploy Project

on:
  push:
    branches:
      - dev
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - dev
      - main
    tags:
      - 'v*.*.*'

env:
  VERSION: "${GITHUB_REF##*/}" # Версия проекта из тега
  JAVA_VERSION: "17"
  HEROKU_APP_NAME: "dash-pivot-app"
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Version File
        run: |
          echo ${{ env.VERSION }}
          echo ${{ env.VERSION }} > VERSION

  build-server:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build Server
        run: ./gradlew :server:build -x test
      - name: Deploy to Heroku
        run: |
          git remote add heroku https://git.heroku.com/${{ env.HEROKU_APP_NAME }}.git
          git push heroku ${{ env.VERSION }}:main
        env:
          HEROKU_API_KEY: ${{ env.HEROKU_API_KEY }}

  build-android:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build Android APK
        run: ./gradlew :composeApp:assembleRelease

      - name: Upload Android APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: composeApp/build/outputs/apk/release/*.apk

  build-ios:
    runs-on: macos-latest
    needs: setup
    steps:
      - name: Set up Xcode
        run: sudo xcode-select --switch /Applications/Xcode_15.4.app

      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -scheme iosApp -sdk iphonesimulator -configuration Release

      - name: Upload iOS Build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: iosApp/build/Release-iphonesimulator/*.app

  build-jvm:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build JVM Application
        run: ./gradlew :jvmApp:build

      - name: Upload JVM Build
        uses: actions/upload-artifact@v3
        with:
          name: jvm-app
          path: jvmApp/build/libs/*.jar